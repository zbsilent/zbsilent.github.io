(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{417:function(s,t,a){"use strict";a.r(t);var n=a(54),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"java笔试题"}},[s._v("java笔试题")]),s._v(" "),a("h2",{attrs:{id:"选择题"}},[s._v("选择题")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("如下哪些是java中有效的关键字( D )[单选题]")]),s._v(" "),a("p",[s._v("A native")]),s._v(" "),a("p",[s._v("B NULL")]),s._v(" "),a("p",[s._v("C false")]),s._v(" "),a("p",[s._v("D this")])]),s._v(" "),a("li",[a("p",[s._v("以下代码输出值是多少( C )[单选题]")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("A 19")]),s._v(" "),a("p",[s._v("B 20")]),s._v(" "),a("p",[s._v("C 21")]),s._v(" "),a("p",[s._v("D 21")])]),s._v(" "),a("li",[a("p",[s._v("以下关于异常的说法正确的是( D )[单选题]")]),s._v(" "),a("p",[s._v("Ａ  一旦出现异常，程序运行就终止了")]),s._v(" "),a("p",[s._v("Ｂ  如果一个方法申明将抛出某个异常，它就必须真的抛出那个异常")]),s._v(" "),a("p",[s._v("Ｃ  在catch子句中匹配异常是一种精确匹配")]),s._v(" "),a("p",[s._v("Ｄ  可能抛出系统异常的方法是不需要申明异常的")])]),s._v(" "),a("li",[a("p",[s._v("下面关于垃圾收集的说法正确的是( D )[单选题]")]),s._v(" "),a("p",[s._v("Ａ  一旦一个对象成为垃圾，就立刻被收集掉。")]),s._v(" "),a("p",[s._v("Ｂ  对象空间被收集掉之后，会执行该对象的finalize方法")]),s._v(" "),a("p",[s._v("Ｃ  finalize方法和C++的析构函数是完全一回事情")]),s._v(" "),a("p",[s._v("Ｄ  一个对象成为垃圾是因为不再有引用指着它，但是线程并非如此")])]),s._v(" "),a("li",[a("p",[s._v("下面的程序中，temp的最终值是( B )[单选题]")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" temp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ntemp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("A  0")]),s._v(" "),a("p",[s._v("B  1\nC  2\nD  3\nE  4")])]),s._v(" "),a("li",[a("p",[s._v("下面有两个赋值语句：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1024"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1024"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("下述说法正确的是( D )[单选题]")]),s._v(" "),a("p",[s._v("A a是整数类型变量，b是整数类对象。")]),s._v(" "),a("p",[s._v("B a是整数类对象，b是整数类型变量。")]),s._v(" "),a("p",[s._v("C a和b都是整数类对象并且它们的值相等。")]),s._v(" "),a("p",[s._v("D a和b都是整数类型变量并且它们的值相等。")])]),s._v(" "),a("li",[a("p",[s._v("咖啡店销售系统具体需求为：咖啡店店员在卖咖啡时，可以根据顾客的要求加入各种配料，并根据加入配料价格的不同来计算总价。若要设计该系统可以应该采用哪种设计模式进行设计( A )[单选题]")]),s._v(" "),a("p",[s._v("A  装饰模式")]),s._v(" "),a("p",[s._v("B 单例模式")]),s._v(" "),a("p",[s._v("C 原型模式")]),s._v(" "),a("p",[s._v("D  组合模式")])]),s._v(" "),a("li",[a("p",[s._v("解决哈希冲突的链地址算法中，关于插入新的数据项的时间表述正确的是( D )[单选题]")]),s._v(" "),a("p",[s._v("A 和数组已占用单元的百分比成正比")]),s._v(" "),a("p",[s._v("B 和链表数目成正比")]),s._v(" "),a("p",[s._v("C  和哈希表中项数成正比")]),s._v(" "),a("p",[s._v("D  随装填因子线性增长")])]),s._v(" "),a("li",[a("p",[s._v("下列关于Object类的说法，正确的是( D )[单选题]")]),s._v(" "),a("p",[s._v("A 如果一个类显示地继承了其他类，则该类不再继承Object类")]),s._v(" "),a("p",[s._v("B Error类不是从Object类派生出来的")]),s._v(" "),a("p",[s._v("C 如果一个类是从Object类派生出来的，那么必须重写toString()和equals()方法")]),s._v(" "),a("p",[s._v("D 一个类如果定义为abstract的，依然继承自Object类")])]),s._v(" "),a("li",[a("p",[s._v("调用者发出消息后，必须等待消息处理结束返回后，才能进行后续操作的是( A )[单选题]")]),s._v(" "),a("p",[s._v("A. 同步消息")]),s._v(" "),a("p",[s._v("B. 返回消息")]),s._v(" "),a("p",[s._v("C. 异步消息")]),s._v(" "),a("p",[s._v("D. 简单消息")])]),s._v(" "),a("li",[a("p",[s._v("在java中重写方法应遵循规则的包括( B C )[多选题]")]),s._v(" "),a("p",[s._v("A 访问修饰符的限制一定要大于被重写方法的访问修饰符")]),s._v(" "),a("p",[s._v("B 可以有不同的访问修饰符")]),s._v(" "),a("p",[s._v("C 参数列表必须完全与被重写的方法相同")]),s._v(" "),a("p",[s._v("D 必须具有不同的参数列表")])]),s._v(" "),a("li",[a("p",[s._v("不能用来修饰interface的有(A C D )[多选题]\nA private")]),s._v(" "),a("p",[s._v("B public")]),s._v(" "),a("p",[s._v("C protected")]),s._v(" "),a("p",[s._v("D static")])]),s._v(" "),a("li",[a("p",[s._v("关于Java中的ClassLoader下面的哪些描述是错误的( B D F )[多选题]")]),s._v(" "),a("p",[s._v("A 默认情况下，Java应用启动过程涉及三个ClassLoader: Boostrap, Extension, System")]),s._v(" "),a("p",[s._v("B 一般的情况不同ClassLoader装载的类是不相同的，但接口类例外，对于同一接口所有类装载器装载所获得的类是相同的")]),s._v(" "),a("p",[s._v("C 类装载器需要保证类装载过程的线程安全")]),s._v(" "),a("p",[s._v("D ClassLoader的loadClass在装载一个类时，如果该类不存在它将返回null")]),s._v(" "),a("p",[s._v("E ClassLoader的父子结构中，默认装载采用了父优先")]),s._v(" "),a("p",[s._v("F 所有ClassLoader装载的类都来自CLASSPATH环境指定的路径")])]),s._v(" "),a("li",[a("p",[s._v("哪二种声明防止方法覆盖(A D )[多选题]")]),s._v(" "),a("p",[s._v("A final void methoda() {}")]),s._v(" "),a("p",[s._v("B void final methoda() {}")]),s._v(" "),a("p",[s._v("C static void methoda() {}")]),s._v(" "),a("p",[s._v("D static final void methoda() {}")]),s._v(" "),a("p",[s._v("E final abstract void methoda() {}")])]),s._v(" "),a("li",[a("p",[s._v("Java 中的集合类包括 ArrayList 、 LinkedList 、 HashMap 等，下列关于集合类描述正确的是(A B D )[多选题]")]),s._v(" "),a("p",[s._v("A ArrayList和LinkedList均实现了List接口")]),s._v(" "),a("p",[s._v("B ArrayList访问速度比LinkedList快")]),s._v(" "),a("p",[s._v("C 随机添加和删除元素时，ArrayList的表现更加快速")]),s._v(" "),a("p",[s._v("D HashMap实现Map接口，它允许任何类型的键和值对象，并允许将NULL用作键或值")])]),s._v(" "),a("li",[a("p",[s._v("关于wait()和sleep()说法正确的是(B C )[多选题]")]),s._v(" "),a("p",[s._v("A  wait()和sleep()都会释放锁")]),s._v(" "),a("p",[s._v("B  sleep()可以在任何地方使用")]),s._v(" "),a("p",[s._v("C wait()只能在方法或者语句块中使用")]),s._v(" "),a("p",[s._v("D  wait()和sleep()都是Thread类的方法")])]),s._v(" "),a("li",[a("p",[s._v("下面哪些语句能够正确地生成5个空字符串(A B )[多选题]")]),s._v(" "),a("p",[s._v("A String a[]=new String[5]；for(int i=0；i<5；a[i++]=“”)；")]),s._v(" "),a("p",[s._v("B String a[]={“”，“”，“”，“”，“”}；")]),s._v(" "),a("p",[s._v("C String a[5]；")]),s._v(" "),a("p",[s._v("D String[5]a；")]),s._v(" "),a("p",[s._v("E String []a=new String[5]；for(int i=0；i<5；a[i++]=null)；")])]),s._v(" "),a("li",[a("p",[s._v("Spring有哪三个核心组件(A B  D)[多选题]")]),s._v(" "),a("p",[s._v("A eans")]),s._v(" "),a("p",[s._v("B Context")]),s._v(" "),a("p",[s._v("C IOC")]),s._v(" "),a("p",[s._v("D Core")])]),s._v(" "),a("li",[a("p",[s._v("下列关于视图的说法中正确的是(C  D)[多选题]")]),s._v(" "),a("p",[s._v("A 对视图的使用与表一样，也可以进行插、查、删、改操作")]),s._v(" "),a("p",[s._v("B  视图与表一样，也存储着数据")]),s._v(" "),a("p",[s._v("C 对视图的操作，是最终都要转化成对基本表的操作")]),s._v(" "),a("p",[s._v("D 可以根据数据库表和自由表建立视图。")])]),s._v(" "),a("li",[a("p",[s._v("下列等价类的叙述中正确的是(A B D)[多选题]")]),s._v(" "),a("p",[s._v("A 若输入条件为一个布尔变量，则可以确定一个有效等价类和一个无效等价类")]),s._v(" "),a("p",[s._v("B  若输入条件为一个逻辑量，则可为每一个输入值确定一个有效等价类，并针对这组值确定一个无效等价类")]),s._v(" "),a("p",[s._v("C  若输入条件规定了“必须如何”的条件，则可以确定一个有效等价类和两个无效等价类")]),s._v(" "),a("p",[s._v("D 若输入条件规定了取值的上下限，则可以确定一个有效等价类和两个无效等价类")])])]),s._v(" "),a("h2",{attrs:{id:"简答题"}},[s._v("简答题")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("请说出作用域public，private，protected，以及不写时的区别 6")]),s._v(" "),a("p",[s._v("private修饰的成员变量和函数只能在类本身和内部类中被访问。")]),s._v(" "),a("p",[s._v("protected 修饰的成员变量和函数能被类本身、子类及同一个包中的类访问。")]),s._v(" "),a("p",[s._v("public修饰的成员变量和函数可以被类、子类、同一个包中的类以及任意其他类访问。")]),s._v(" "),a("p",[s._v("默认情况（不写）下，属于一种包访问，即能被类本身以及同一个包中的类访问")])]),s._v(" "),a("li",[a("p",[s._v("面向对象的特征有哪些方面 8")]),s._v(" "),a("p",[s._v("面向对象的三大特征：1.继承 2.封装 3.多态性")]),s._v(" "),a("p",[s._v("（1）继承：就是保留父类的属性，开扩新的东西。通过子类可以实现继承，子类继承父类的所有状态和行")]),s._v(" "),a("p",[s._v("为，同时添加自身的状态和行为。")]),s._v(" "),a("p",[s._v("（2）封装：就是类的私有化。将代码及处理数据绑定在一起的一种编程机制，该机制保证程序和数据不受外")]),s._v(" "),a("p",[s._v("部干扰。")]),s._v(" "),a("p",[s._v("（3）多态：是允许将父对象设置成为和一个和多个它的子对象相等的技术。包括重载和重写。重载为编译时多态，重写是运行时多态。")])]),s._v(" "),a("li",[a("p",[s._v("想要了解班级内同学的考试情况，现有一张成绩表表名为A，每行都包含以下内容（已知表中没有重复内容，但所有的考试结果都录入在了同一张表中，一个同学会有多条考试结果）：student_id，course_name，score")]),s._v(" "),a("p",[s._v("1）每门课程得到成绩的同学人数 2")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" course_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" student_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" course_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("每门课程的平均成绩 2")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" course_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" course_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("如果对于每门课程来说，60分以下为不及格，高于60为及格，统计每门课程及格和不及格的人数 2")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" course_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("score "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" PASS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("score "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" FAIL\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"程序设计题"}},[s._v("程序设计题")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。例如，121 是回文，而 123 不是。")]),s._v(" "),a("p",[s._v("​")]),s._v(" "),a("p",[s._v("示例 1：")]),s._v(" "),a("blockquote",[a("p",[s._v("输入：x = 121\n输出：true")])]),s._v(" "),a("p",[s._v("示例 2：")]),s._v(" "),a("blockquote",[a("p",[s._v("输入：x = -121\n输出：false\n解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。")])]),s._v(" "),a("p",[s._v("示例 3：")]),s._v(" "),a("blockquote",[a("p",[s._v("输入：x = 10\n输出：false\n解释：从右向左读, 为 01 。因此它不是一个回文数。")])]),s._v(" "),a("p",[s._v("示例 4：")]),s._v(" "),a("blockquote",[a("p",[s._v("输入：x = -101\n输出：false")])]),s._v(" "),a("p",[a("code",[s._v("提示")]),s._v("：")]),s._v(" "),a("p",[a("code",[s._v("231 <= x <= 231 - 1")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isPalindrome")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 特殊情况：")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如上所述，当 x < 0 时，x 不是回文数。")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同样地，如果数字的最后一位是 0，为了使该数字为回文，")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 则其第一位数字也应该是 0")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只有 0 满足这一属性")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" revertedNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" revertedNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            revertedNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" revertedNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" revertedNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" revertedNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("给你二叉树的根节点 "),a("code",[s._v("root")]),s._v(" ，返回它节点值的 "),a("strong",[s._v("前序")]),s._v(" 遍历。")]),s._v(" "),a("p",[s._v("示例 1：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg",alt:"img"}})]),s._v(" "),a("blockquote",[a("p",[s._v("输入：root = [1,null,2,3]\n输出：[1,2,3]")])]),s._v(" "),a("p",[s._v("示例 2：")]),s._v(" "),a("blockquote",[a("p",[s._v("输入：root = []\n输出：[]")])]),s._v(" "),a("p",[s._v("示例 3：")]),s._v(" "),a("blockquote",[a("p",[s._v("输入：root = [1]\n输出：[1]")])]),s._v(" "),a("p",[s._v("示例 4：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://assets.leetcode.com/uploads/2020/09/15/inorder_5.jpg",alt:"img"}})]),s._v(" "),a("blockquote",[a("p",[s._v("输入：root = [1,2]\n输出：[1,2]")])]),s._v(" "),a("p",[s._v("示例 5：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://assets.leetcode.com/uploads/2020/09/15/inorder_4.jpg",alt:"img"}})]),s._v(" "),a("blockquote",[a("p",[s._v("输入：root = [1,null,2]\n输出：[1,2]")])]),s._v(" "),a("p",[a("code",[s._v("提示")]),s._v("：")]),s._v(" "),a("p",[a("code",[s._v("树中节点数目在范围 [0, 100] 内 -100 <= Node.val <= 100")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("preorderTraversal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeNode")]),s._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("preorder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("preorder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeNode")]),s._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("preorder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("preorder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);